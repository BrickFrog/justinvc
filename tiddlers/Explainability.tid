created: 20220109204300174
modified: 20220119171053629
title: Explainability
tmap.id: 3d18d4ce-e142-4ce2-925b-45e39123cc07

What exactly is explainability and how it should relate to a software/career? This probably also applies to anything I write here and there's a myriad of resources I should -probably- consume

There's HowToReadABook, older, but I remember this being mentioned quite a bit. With regards to my career (Data Science/ML) I was reminded by an article I read (https://buttondown.email/hillelwayne/archive/principles-of-software-evangelism/).

Should most things be broken down into:

* What is this?
* Why is it useful?
* Are there drawbacks to this?

These three are a heuristic common-sense breakdown. Most of my experience is in the Fortune 500 space where the "average" user isn't a technical wizard, of course this might be different if I switch to startups. Something to keep in mind.

I could stand to refine after consuming more resources. If only I had unlimited amounts of free time. Editing is probably also a useful thing to keep in mind, I tend to stream of conciousness post/explain.